"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4056],{9400:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(7622),s=n(9496),o=n(1149);function a(e){const t=(0,s.useRef)(),[n,a]=(0,s.useState)(!1),[i,l]=(0,s.useState)(!1);return(0,o.xQ)(((e,n)=>t.current.rotation.x+=n)),s.createElement("mesh",(0,r.Z)({},e,{ref:t,scale:i?1.5:1,onClick:e=>l(!i),onPointerOver:e=>a(!0),onPointerOut:e=>a(!1)}),s.createElement("boxGeometry",{args:[1,1,1]}),s.createElement("meshStandardMaterial",{color:n?"hotpink":"orange"}))}const i=function(){return s.createElement(o.Xz,{linear:!1,flat:!1,gl:{useLegacyLights:!0}},s.createElement("ambientLight",{intensity:1}),s.createElement("pointLight",{position:[10,10,10],intensity:1}),s.createElement(a,{position:[-1.2,0,0]}),s.createElement(a,{position:[1.2,0,0]}))}},6556:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var r=n(7622),s=(n(9496),n(9613)),o=n(9400);const a={slug:"r3f-blog-post",title:"R3F Blog Post",authors:["GPLer"],tags:["test"]},i=void 0,l={permalink:"/blog/r3f-blog-post",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-11-02-r3f-blog-post.mdx",source:"@site/blog/2023-11-02-r3f-blog-post.mdx",title:"R3F Blog Post",description:"+ https://github.com/pmndrs/react-three-fiber/tree/v7",date:"2023-11-02T00:00:00.000Z",formattedDate:"2023\u5e7411\u67082\u65e5",tags:[{label:"test",permalink:"/blog/tags/test"}],readingTime:.825,hasTruncateMarker:!1,authors:[{name:"GPLer",title:"Front End Engineer",url:"https://github.com/cxzx150133",imageURL:"https://github.com/cxzx150133.png",key:"GPLer"}],frontMatter:{slug:"r3f-blog-post",title:"R3F Blog Post",authors:["GPLer"],tags:["test"]},nextItem:{title:"MathJax Blog Post",permalink:"/blog/mathjax-blog-post"}},c={authorsImageUrls:[void 0]},m=[],u={toc:m},p="wrapper";function h(e){let{components:t,...n}=e;return(0,s.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/pmndrs/react-three-fiber/tree/v7"},"https://github.com/pmndrs/react-three-fiber/tree/v7"))),(0,s.kt)(o.Z,{mdxType:"R3F"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"// R3F.tsx\nimport React, { useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\n\nfunction Box(props) {\n  // This reference will give us direct access to the mesh\n  const meshRef = useRef()\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => (meshRef.current.rotation.x += delta))\n  // Return view, these are regular three.js elements expressed in JSX\n  return (\n    <mesh\n      {...props}\n      ref={meshRef}\n      scale={active ? 1.5 : 1}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\nfunction App() {\n  return (\n    <Canvas linear={false} flat={false} gl={{ useLegacyLights: true }}>\n      <ambientLight intensity={1} />\n      <pointLight position={[10, 10, 10]} intensity={1} />\n      <Box position={[-1.2, 0, 0]} />\n      <Box position={[1.2, 0, 0]} />\n    </Canvas>\n  );\n}\n\nexport default App\n")))}h.isMDXComponent=!0}}]);